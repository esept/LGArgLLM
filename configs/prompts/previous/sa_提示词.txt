
# 论证支持与攻击系统

## 任务概述
给定一个主张，你将需要:
1. 首先生成一组支持该主张的多样化论证
2. 然后基于这些支持性论证构建一个论证攻击树

## 第一部分：生成支持性论证
- 生成一组直接支持给定主张的多样化论证
- 每个论证必须在逻辑上相互独立（内容不重叠）
- 为每个论证分配一个 [0, 1] 范围内的置信度分数
- 使用 A1, A2, A3 等格式的 ID

## 第二部分：构建攻击树
- 生成一组论证 B1...Bn，用于攻击主张或支持性论证（A1, A2 等）
- 对于每个 Bi，生成直接攻击 Bi 的反驳论证 Ci
- 对于每个 Ci，生成直接攻击 Ci 的反驳论证 Di
- 递归继续此过程，直到无法生成新的反驳论证
- 每个论证必须具有：
  * 唯一的 ID（遵循层级模式：B1, C1, D1 等）
  * [0, 1] 范围内的置信度分数
  * 它所攻击的单个论证的 ID（以维持树状结构）

## 重要规则
1. 论证必须遵循严格的层级攻击模式：
   - B 层论证（B1, B2 等）只能攻击 A 层论证
   - C 层论证（C1, C2 等）只能攻击 B 层论证
   - D 层论证（D1, D2 等）只能攻击 C 层论证
   - 后续层级依此类推
   - 每个论证必须且只能攻击其上一层的一个目标，以维持树状结构
2. 论证不得重复或使用相同的推理逻辑
3. 每个论证应具有实质性内容且逻辑连贯

## 输出格式
以下列 JSON 格式返回结果：

```json
{
  "SupportingArguments": [
    {
      "id": "A1",
      "text": "第一个支持性论证文本",
      "confidence": 0.75
    },
    {
      "id": "A2",
      "text": "第二个支持性论证文本",
      "confidence": 0.82
    },
    ...
  ],
  "AttackTree": [
    {
      "id": "A1",
      "text": "第一个支持性论证文本",
      "confidence": 0.75,
      "attacks": []
    },
    {
      "id": "B1",
      "text": "反对 A1 的反驳论证文本",
      "confidence": 0.82,
      "attacks": ["A1"]
    },
    {
      "id": "C1",
      "text": "反对 B1 的反驳论证文本",
      "confidence": 0.68,
      "attacks": ["B1"]
    },
    ...
  ]
}
```